# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-09-25 13:34
from __future__ import unicode_literals

import accounts.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=40)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('hourrate', models.CharField(blank=True, max_length=30, verbose_name='Hour Rate')),
                ('education', models.CharField(blank=True, max_length=30, verbose_name='education')),
                ('degree', models.CharField(blank=True, max_length=30, verbose_name='degree')),
                ('postcode', models.CharField(blank=True, max_length=30, verbose_name='postcode')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('name_of_university', models.CharField(blank=True, max_length=30, verbose_name='name of University')),
                ('availability_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Available From')),
                ('availability_to', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Available To')),
                ('about', models.CharField(blank=True, max_length=30, verbose_name='About Me')),
                ('role', models.FilePathField(choices=[('Tutor', 'Tutor'), ('Student', 'Student')], default=b'Student', max_length=10)),
                ('avatar', models.URLField(default=b'http://simpleicon.com/wp-content/uploads/user-2.png', verbose_name='image')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('subjects', models.ManyToManyField(blank=True, to='api.Subjects')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
