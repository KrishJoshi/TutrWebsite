# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-09 11:24
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0004_auto_20160328_1434'),
    ]

    operations = [
        migrations.CreateModel(
            name='FeaturedStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_year', models.IntegerField(blank=True, help_text='The year of the trip', null=True)),
                ('trip_month', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('trip_day', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('heathrow_origin', models.BooleanField(default=True, help_text='True if flight originated at Heathrow, False otherwise')),
                ('destination', models.CharField(help_text='The trip destination', max_length=255)),
                ('terminal', models.CharField(choices=[(b'T1', b'Terminal 1'), (b'T2', b'Terminal 2'), (b'T3', b'Terminal 3'), (b'T4', b'Terminal 4'), (b'T5', b'Terminal 5')], help_text='The Heathrow terminal number flown from/into', max_length=2)),
                ('details', models.TextField()),
                ('image', models.ImageField(blank=True, help_text='The associated user-uploaded image', null=True, upload_to='story_images')),
                ('title', models.CharField(blank=True, help_text="The title of this story to be displayed on the site'", max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, help_text='A slug will be auto-generated from the Title of the Story', null=True, unique=True)),
                ('importance', models.IntegerField(default=50, help_text='A number (0-100) that indicates how impoertant this story is, and therefore where it should appear on the site')),
                ('embargo_date', models.DateTimeField(blank=True, help_text='If this is blank, Story will go live immediately', null=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='If this is blank, will continue to be shown indefinitely', null=True)),
                ('content_url', models.CharField(blank=True, max_length=512, null=True)),
                ('youtube_id', models.CharField(blank=True, max_length=32, null=True)),
                ('soundcloud_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Stories - Featured',
            },
        ),
        migrations.CreateModel(
            name='Gift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('merchant', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('included', models.TextField(blank=True, null=True)),
                ('terms', models.TextField()),
                ('importance', models.IntegerField(default=50)),
                ('to_be_displayed', models.BooleanField(default=False, verbose_name=b'Display on homepage')),
                ('active', models.BooleanField(default=True)),
                ('embargo_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('image', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='image', to='filer.Image')),
                ('image_thumbnail', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='image_thumbnail', to='filer.Image')),
                ('logo_full', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='logo_full', to='filer.Image', verbose_name=b'Main logo')),
                ('logo_module', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='logo_module', to='filer.Image', verbose_name=b'Module logo')),
            ],
        ),
        migrations.CreateModel(
            name='GiftImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Gift')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('email_address', models.EmailField(max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=10)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('address_line_1', models.CharField(max_length=50)),
                ('address_line_2', models.CharField(blank=True, max_length=50, null=True)),
                ('address_line_3', models.CharField(blank=True, max_length=50, null=True)),
                ('town', models.CharField(max_length=50)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(max_length=50)),
                ('rewards_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'People',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_year', models.IntegerField(blank=True, help_text='The year of the trip', null=True)),
                ('trip_month', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('trip_day', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('heathrow_origin', models.BooleanField(default=True, help_text='True if flight originated at Heathrow, False otherwise')),
                ('destination', models.CharField(help_text='The trip destination', max_length=255)),
                ('terminal', models.CharField(choices=[(b'T1', b'Terminal 1'), (b'T2', b'Terminal 2'), (b'T3', b'Terminal 3'), (b'T4', b'Terminal 4'), (b'T5', b'Terminal 5')], help_text='The Heathrow terminal number flown from/into', max_length=2)),
                ('details', models.TextField()),
                ('image', models.ImageField(blank=True, help_text='The associated user-uploaded image', null=True, upload_to='story_images')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='The date and time of submission of this story')),
                ('status', models.CharField(choices=[(b'n', b'New'), (b'r', b'Rejected'), (b'a', b'Accepted')], default=b'n', help_text='Show this story on the site', max_length=1)),
            ],
            options={
                'verbose_name': 'Story - User submitted',
                'verbose_name_plural': 'Stories - User submitted',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CuratedStory',
            fields=[
                ('trip_year', models.IntegerField(blank=True, help_text='The year of the trip', null=True)),
                ('trip_month', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('trip_day', models.IntegerField(blank=True, help_text='The month of the trip', null=True)),
                ('heathrow_origin', models.BooleanField(default=True, help_text='True if flight originated at Heathrow, False otherwise')),
                ('destination', models.CharField(help_text='The trip destination', max_length=255)),
                ('terminal', models.CharField(choices=[(b'T1', b'Terminal 1'), (b'T2', b'Terminal 2'), (b'T3', b'Terminal 3'), (b'T4', b'Terminal 4'), (b'T5', b'Terminal 5')], help_text='The Heathrow terminal number flown from/into', max_length=2)),
                ('details', models.TextField()),
                ('image', models.ImageField(blank=True, help_text='The associated user-uploaded image', null=True, upload_to='story_images')),
                ('title', models.CharField(blank=True, help_text="The title of this story to be displayed on the site'", max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, help_text='A slug will be auto-generated from the Title of the Story', null=True, unique=True)),
                ('importance', models.IntegerField(default=50, help_text='A number (0-100) that indicates how impoertant this story is, and therefore where it should appear on the site')),
                ('embargo_date', models.DateTimeField(blank=True, help_text='If this is blank, Story will go live immediately', null=True)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='If this is blank, will continue to be shown indefinitely', null=True)),
                ('story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.Story')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='The date and time of original user-submission of this story')),
                ('pull_quote', models.CharField(blank=True, help_text='If no image is supplied (or is to be used), populate this with a quote from the details body', max_length=255, null=True)),
                ('curated_image', models.ImageField(blank=True, help_text='The image to be displayed on the site.  To use the user-uploaded image, re-upload it here', null=True, upload_to=b'story_images')),
                ('gift_tier', models.CharField(blank=True, choices=[(b'1', b'Tier 1'), (b'2', b'Tier 2'), (b'3', b'Tier 3')], help_text='The tier of prize awarded', max_length=2, null=True)),
                ('headline_story', models.BooleanField(default=False)),
                ('to_be_displayed', models.BooleanField(default=False, help_text="Tick if this is a story you will want on the homepage.<br/>Will not appear on the homepage unless 'Ready to publish' is also ticked.")),
                ('ready_to_publish', models.BooleanField(default=False, help_text="Tick when you're finished editing and are happy for the Story to go live.<br/>It will not actually go live until the embargo date")),
                ('person', models.ForeignKey(help_text='The person that originally submitted the story.  This is non-editable.', on_delete=django.db.models.deletion.CASCADE, to='core.Person')),
                ('tags', models.ManyToManyField(blank=True, to='core.Tag')),
            ],
            options={
                'verbose_name_plural': 'Stories - Accepted',
            },
        ),
        migrations.AddField(
            model_name='story',
            name='person',
            field=models.ForeignKey(help_text='The person that submitted the story', on_delete=django.db.models.deletion.CASCADE, to='core.Person'),
        ),
        migrations.AddField(
            model_name='featuredstory',
            name='tags',
            field=models.ManyToManyField(blank=True, to='core.Tag'),
        ),
        migrations.CreateModel(
            name='TierableStory',
            fields=[
            ],
            options={
                'verbose_name': 'Story - Awaiting Tier',
                'proxy': True,
                'verbose_name_plural': 'Stories - Awaiting Tier',
            },
            bases=('core.curatedstory',),
        ),
    ]
